#!/usr/bin/env bash

CONFIG_FILE="config/wp-version.conf"
WORDPRESS_VERSION_ENV="${1:-$WORDPRESS_VERSION}"
PHP_VERSION_ENV="${2:-$PHP_VERSION}"

WORDPRESS_PORT="80${WORDPRESS_VERSION_ENV}"
WP_IMAGE_KEY="${WORDPRESS_VERSION_ENV}_${PHP_VERSION_ENV}"
WP_IMAGE=$(grep "^${WP_IMAGE_KEY}=" "$CONFIG_FILE" | cut -d'=' -f2)

COMMAND=${3}

export WP_IMAGE
export COMPOSE_PROJECT_NAME="pdc_${WORDPRESS_VERSION_ENV}_${PHP_VERSION_ENV}"
export WORDPRESS_PORT

# Ensure zip is available, then run the WP-CLI command in the same ephemeral container
docker compose -f config/docker-compose.yml run --rm --user root --env WPCLI_CMD="$COMMAND" wpcli bash -lc 'set -e;
  if ! command -v zip >/dev/null 2>&1; then
    if command -v apt-get >/dev/null 2>&1; then apt-get update -y && apt-get install -y zip unzip >/dev/null;
    elif command -v apk >/dev/null 2>&1; then apk add --no-cache zip unzip >/dev/null;
    elif command -v dnf >/dev/null 2>&1; then dnf install -y zip unzip >/dev/null;
    elif command -v yum >/dev/null 2>&1; then yum install -y zip unzip >/dev/null;
    else echo "zip not found and no known package manager available" >&2; exit 1; fi;
  fi;
  wp ${WPCLI_CMD} --allow-root'
